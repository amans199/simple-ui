// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors
/// Block Element
/// @access public
/// @param {String} $element - Element's name
@mixin element($element) {
    &__#{$element} {
        @content;
    }
}

/// Block Modifier
/// @access public
/// @param {String} $modifier - Modifier's name
@mixin modifier($modifier) {
    &--#{$modifier} {
        @content;
    }
}

/// @alias element
@mixin e($element) {
    @include element($element) {
        @content;
    }
}

/// @alias modifier
@mixin m($modifier) {
    @include modifier($modifier) {
        @content;
    }
}

// // Media queries
// $breakpoint-phone: 640px;
// $breakpoint-tablet: 768px;
// $breakpoint-desktop: 1024px;

@mixin mq($break) {
    @if $break == "small" {
        @media (max-width: $breakpoint-phone) {
            @content;
        }
    } @else if $break == "notsmall" {
        @media (min-width: $breakpoint-phone + 1) {
            @content;
        }
    } @else if $break == "medium" {
        @media (min-width: $breakpoint-phone + 1) and (min-width: $breakpoint-desktop) {
            @content;
        }
    } @else if $break == "notlarge" {
        @media (max-width: $breakpoint-desktop) {
            @content;
        }
    } @else if $break == "large" {
        @media (min-width: $breakpoint-desktop) {
            @content;
        }
    } @else {
        @error "Whoops! No value could be retrieved for `#{$break}`. ";
    }
}

// ===========================================
// Transitions
@mixin transition($args...) {
    @media (prefers-reduced-motion: no-preference) {
        -webkit-transition: $args;
        -moz-transition: $args;
        -ms-transition: $args;
        -o-transition: $args;
        transition: $args;
    }
}
